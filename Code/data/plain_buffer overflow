{"https:\/\/github.com\/minhrongcon2000\/snake-rl":{"48581c8acfa56785fdec3b4b7d020fc4c5c477be":{"url":"https:\/\/api.github.com\/repos\/minhrongcon2000\/snake-rl\/commits\/48581c8acfa56785fdec3b4b7d020fc4c5c477be","html_url":"https:\/\/github.com\/minhrongcon2000\/snake-rl\/commit\/48581c8acfa56785fdec3b4b7d020fc4c5c477be","message":"prevent overflow by reducing buffer size","sha":"48581c8acfa56785fdec3b4b7d020fc4c5c477be","keyword":"buffer overflow prevent","diff":"diff --git a\/main.py b\/main.py\nindex 5a92c3f..52fb256 100644\n--- a\/main.py\n+++ b\/main.py\n@@ -38,7 +38,7 @@ def make_snake_env():\n )\n \n env = make_snake_env()\n-model = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\")\n+model = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\", buffer_size=100000)\n model.learn(\n     total_timesteps=config[\"total_timesteps\"], \n     callback=WandbCallback(\n","files":{"\/main.py":{"changes":[{"diff":"\n )\n \n env = make_snake_env()\n-model = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\")\n+model = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\", buffer_size=100000)\n model.learn(\n     total_timesteps=config[\"total_timesteps\"], \n     callback=WandbCallback(\n","add":1,"remove":1,"filename":"\/main.py","badparts":["model = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\")"],"goodparts":["model = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\", buffer_size=100000)"]}],"source":"\nfrom stable_baselines3.common.atari_wrappers import WarpFrame, MaxAndSkipEnv, EpisodicLifeEnv from stable_baselines3.common.env_util import make_vec_env from stable_baselines3.common.vec_env import VecFrameStack from stable_baselines3 import DQN import gym import snake_gym_grid.snake_gym_grid import wandb from wandb.integration.sb3 import WandbCallback import os import argparse def make_snake_env(): env=make_vec_env(\"snake-gym-grid-10x20-v0\", 4) env=VecFrameStack(env, 2) return env parser=argparse.ArgumentParser() parser.add_argument(\"--wandb_api_key\", type=str) args=parser.parse_args() key=args.wandb_api_key os.environ[\"WANDB_API_KEY\"]=key config={ \"policy_type\": \"CnnPolicy\", \"total_timesteps\": int(2e5), \"env_name\": \"snake-gym-grid-10x20-v0\", } run=wandb.init( project=\"snake_rl_sb3\", config=config, sync_tensorboard=True, name=\"DQN\" ) env=make_snake_env() model=DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\") model.learn( total_timesteps=config[\"total_timesteps\"], callback=WandbCallback( model_save_path=f\"models\/{run.id}\", verbose=2 ) ) run.finish() ","sourceWithComments":"from stable_baselines3.common.atari_wrappers import WarpFrame, MaxAndSkipEnv, EpisodicLifeEnv\nfrom stable_baselines3.common.env_util import make_vec_env\nfrom stable_baselines3.common.vec_env import VecFrameStack\nfrom stable_baselines3 import DQN\nimport gym\nimport snake_gym_grid.snake_gym_grid\nimport wandb\nfrom wandb.integration.sb3 import WandbCallback\nimport os\nimport argparse\n\ndef make_snake_env():\n    env = make_vec_env(\"snake-gym-grid-10x20-v0\", 4)\n    env = VecFrameStack(env, 2)\n    return env\n\n\nparser = argparse.ArgumentParser()\nparser.add_argument(\"--wandb_api_key\", type=str)\nargs = parser.parse_args()\n\nkey = args.wandb_api_key\n\nos.environ[\"WANDB_API_KEY\"] = key\n\nconfig = {\n    \"policy_type\": \"CnnPolicy\",\n    \"total_timesteps\": int(2e5),\n    \"env_name\": \"snake-gym-grid-10x20-v0\",\n}\nrun = wandb.init(\n    project=\"snake_rl_sb3\",\n    config=config,\n    sync_tensorboard=True,  # auto-upload sb3's tensorboard metrics\n    # monitor_gym=True,  # auto-upload the videos of agents playing the game\n    # save_code=True,  # optional\n    name=\"DQN\"\n)\n\nenv = make_snake_env()\nmodel = DQN(\"CnnPolicy\", env, tensorboard_log=f\"runs\/{run.id}\")\nmodel.learn(\n    total_timesteps=config[\"total_timesteps\"], \n    callback=WandbCallback(\n        model_save_path=f\"models\/{run.id}\", \n        verbose=2\n    )\n)\nrun.finish()\n"}},"msg":"prevent overflow by reducing buffer size"}},"https:\/\/github.com\/rylequi\/mybaitis-plus_demo":{"be90bb7b7f21898a9092c9b5c1a3bc5de0ab9229":{"url":"https:\/\/api.github.com\/repos\/rylequi\/mybaitis-plus_demo\/commits\/be90bb7b7f21898a9092c9b5c1a3bc5de0ab9229","html_url":"https:\/\/github.com\/rylequi\/mybaitis-plus_demo\/commit\/be90bb7b7f21898a9092c9b5c1a3bc5de0ab9229","message":"NFC: Prevent multiple buffer overflows in NCI","sha":"be90bb7b7f21898a9092c9b5c1a3bc5de0ab9229","keyword":"buffer overflow prevent","diff":"diff --git a\/django_auth\/settings.py b\/django_auth\/settings.py\nindex 5d8a16d..21082fb 100644\n--- a\/django_auth\/settings.py\n+++ b\/django_auth\/settings.py\n@@ -64,4 +64,5 @@\n                 'django.template.context_processors.debug',\n                 'django.template.context_processors.request',\n                 'django.contrib.auth.context_processors.auth',\n-                'django.contrib.messages.context_processors.messages',\n\\ No newline at end of file\n+                'django.contrib.messages.context_processors.messages',\n+                'social_django.context_processors.backends',  # <- Here\n\\ No newline at end of file\n","files":{"\/django_auth\/settings.py":{"changes":[{"diff":"\n                 'django.template.context_processors.debug',\n                 'django.template.context_processors.request',\n                 'django.contrib.auth.context_processors.auth',\n-                'django.contrib.messages.context_processors.messages',\n\\ No newline at end of file\n+                'django.contrib.messages.context_processors.messages',\n+                'social_django.context_processors.backends',  # <- Here\n\\ No newline at end of file\n","add":2,"remove":1,"filename":"\/django_auth\/settings.py","badparts":["                'django.contrib.messages.context_processors.messages',"],"goodparts":["                'django.contrib.messages.context_processors.messages',","                'social_django.context_processors.backends',  # <- Here"]}],"source":"\n \"\"\" Django settings for django_auth project. Generated by 'django-admin startproject' using Django 1.11.7. For more information on this file, see https:\/\/docs.djangoproject.com\/en\/1.11\/topics\/settings\/ For the full list of settings and their values, see https:\/\/docs.djangoproject.com\/en\/1.11\/ref\/settings\/ \"\"\" import os BASE_DIR=os.path.dirname(os.path.dirname(os.path.abspath(__file__))) SECRET_KEY='6+@wfiy6uxgap1c)+^lk^02a=!yud0t46!npca+tkk$+jgx7_m' DEBUG=True ALLOWED_HOSTS=[] INSTALLED_APPS=[ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'social_django' ] MIDDLEWARE=[ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ] ROOT_URLCONF='django_auth.urls' TEMPLATES=[ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS':[os.path.join(BASE_DIR, 'templates')], 'APP_DIRS': True, 'OPTIONS':{ 'context_processors':[ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ","sourceWithComments":"\n\"\"\"\nDjango settings for django_auth project.\n\nGenerated by 'django-admin startproject' using Django 1.11.7.\n\nFor more information on this file, see\nhttps:\/\/docs.djangoproject.com\/en\/1.11\/topics\/settings\/\n\nFor the full list of settings and their values, see\nhttps:\/\/docs.djangoproject.com\/en\/1.11\/ref\/settings\/\n\"\"\"\n\nimport os\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\nBASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n\n\n# Quick-start development settings - unsuitable for production\n# See https:\/\/docs.djangoproject.com\/en\/1.11\/howto\/deployment\/checklist\/\n\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = '6+@wfiy6uxgap1c)+^lk^02a=!yud0t46!npca+tkk$+jgx7_m'\n\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\n\nALLOWED_HOSTS = []\n\n\n# Application definition\n\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'social_django' # <- Here\n\n]\n\nMIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\n\nROOT_URLCONF = 'django_auth.urls'\n\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR, 'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',\n                'django.contrib.messages.context_processors.messages',"}},"msg":"NFC: Prevent multiple buffer overflows in NCI"}},"https:\/\/github.com\/philgyford\/django-hines":{"375bdc8078467ce0f8e0ed689fb58138a8696cff":{"url":"https:\/\/api.github.com\/repos\/philgyford\/django-hines\/commits\/375bdc8078467ce0f8e0ed689fb58138a8696cff","html_url":"https:\/\/github.com\/philgyford\/django-hines\/commit\/375bdc8078467ce0f8e0ed689fb58138a8696cff","message":"Try setting the log level to prevent Error L10 (output buffer overflow)","sha":"375bdc8078467ce0f8e0ed689fb58138a8696cff","keyword":"buffer overflow prevent","diff":"diff --git a\/hines\/config\/settings.py b\/hines\/config\/settings.py\nindex 62d554c5..36f108c1 100644\n--- a\/hines\/config\/settings.py\n+++ b\/hines\/config\/settings.py\n@@ -245,7 +245,7 @@\n             \"class\": \"rich.logging.RichHandler\",\n             \"filters\": [\"require_debug_true\"],\n             \"formatter\": \"rich\",\n-            \"level\": \"DEBUG\",\n+            \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),\n             \"rich_tracebacks\": True,\n             \"tracebacks_show_locals\": True,\n         },\n@@ -253,12 +253,12 @@\n     \"loggers\": {\n         \"django\": {\n             \"handlers\": [],\n-            \"level\": \"INFO\",\n+            \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),\n         },\n     },\n     \"root\": {\n         \"handlers\": [\"console\"],\n-        \"level\": \"INFO\",\n+        \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),\n     },\n }\n \n","files":{"\/hines\/config\/settings.py":{"changes":[{"diff":"\n             \"class\": \"rich.logging.RichHandler\",\n             \"filters\": [\"require_debug_true\"],\n             \"formatter\": \"rich\",\n-            \"level\": \"DEBUG\",\n+            \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),\n             \"rich_tracebacks\": True,\n             \"tracebacks_show_locals\": True,\n         },\n","add":1,"remove":1,"filename":"\/hines\/config\/settings.py","badparts":["            \"level\": \"DEBUG\","],"goodparts":["            \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),"]},{"diff":"\n         \"django\": {\n             \"handlers\": [],\n-            \"level\": \"INFO\",\n+            \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),\n         },\n     },\n     \"root\": {\n         \"handlers\": [\"console\"],\n-        \"level\": \"INFO\",\n+        \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),\n     },\n }\n \n","add":2,"remove":2,"filename":"\/hines\/config\/settings.py","badparts":["            \"level\": \"INFO\",","        \"level\": \"INFO\","],"goodparts":["            \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),","        \"level\": env(\"HINES_LOG_LEVEL\", default=\"ERROR\"),"]}],"source":"\n\"\"\" Should be extended by settings for specific environments. \"\"\" from pathlib import Path import environ import sentry_sdk from django.contrib import messages from sentry_sdk.integrations.django import DjangoIntegration BASE_DIR=Path(__file__).resolve().parent.parent.parent env=environ.Env() environ.Env.read_env(BASE_DIR \/ \".env\") SECRET_KEY=env(\"DJANGO_SECRET_KEY\") DEBUG=env.bool(\"DEBUG\", default=False) ALLOWED_HOSTS=env.list(\"ALLOWED_HOSTS\") ADMINS=[(\"Phil Gyford\", \"phil@gyford.com\")] MANAGERS=ADMINS INSTALLED_APPS=[ \"dal\", \"dal_select2\", \"django.contrib.admin\", \"django.contrib.auth\", \"django.contrib.contenttypes\", \"django.contrib.sessions\", \"django.contrib.messages\", \"whitenoise.runserver_nostatic\", \"django.contrib.staticfiles\", \"django.contrib.sites\", \"django.contrib.flatpages\", \"django.contrib.redirects\", \"django.contrib.sitemaps\", \"taggit\", \"django_comments\", \"hcaptcha\", \"imagekit\", \"spectator.core\", \"spectator.events\", \"spectator.reading\", \"sortedm2m\", \"corsheaders\", \"mentions\", \"ditto.core\", \"ditto.flickr\", \"ditto.lastfm\", \"ditto.pinboard\", \"ditto.twitter\", \"hines.users\", \"hines.core\", \"hines.blocks\", \"hines.custom_comments\", \"hines.stats\", \"hines.links\", \"hines.patterns\", \"hines.weblogs\", ] MIDDLEWARE=[ \"django.middleware.security.SecurityMiddleware\", \"corsheaders.middleware.CorsMiddleware\", \"whitenoise.middleware.WhiteNoiseMiddleware\", \"django.contrib.sessions.middleware.SessionMiddleware\", \"django.middleware.common.CommonMiddleware\", \"django.middleware.csrf.CsrfViewMiddleware\", \"django.contrib.auth.middleware.AuthenticationMiddleware\", \"django.contrib.messages.middleware.MessageMiddleware\", \"django.middleware.clickjacking.XFrameOptionsMiddleware\", \"mentions.middleware.WebmentionHeadMiddleware\", \"django.contrib.redirects.middleware.RedirectFallbackMiddleware\", ] ROOT_URLCONF=\"hines.config.urls\" TEMPLATES=[ { \"BACKEND\": \"django.template.backends.django.DjangoTemplates\", \"DIRS\":[\"hines\/templates\"], \"APP_DIRS\": True, \"OPTIONS\":{ \"context_processors\":[ \"django.template.context_processors.debug\", \"django.template.context_processors.request\", \"django.contrib.auth.context_processors.auth\", \"django.contrib.messages.context_processors.messages\", \"hines.core.context_processors.core\", ], }, }, ] WSGI_APPLICATION=\"hines.config.wsgi.application\" DATABASES={\"default\": env.db_url()} DATABASES[\"default\"][\"CONN_MAX_AGE\"]=500 USE_PER_SITE_CACHE=False if USE_PER_SITE_CACHE: MIDDLEWARE=[\"django.middleware.cache.UpdateCacheMiddleware\"] +MIDDLEWARE MIDDLEWARE +=[ \"django.middleware.cache.FetchFromCacheMiddleware\", ] CACHE_MIDDLEWARE_ALIAS=\"default\" CACHE_MIDDLEWARE_SECONDS=600 CACHE_MIDDLEWARE_KEY_PREFIX=\"\" AUTH_PASSWORD_VALIDATORS=[ { \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\", }, {\"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\"}, {\"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\"}, {\"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\"}, ] LANGUAGE_CODE=\"en\" TIME_ZONE=\"UTC\" USE_I18N=False USE_L10N=True USE_TZ=True USE_THOUSAND_SEPARATOR=True STATICFILES_STORAGE=\"whitenoise.storage.CompressedManifestStaticFilesStorage\" STATIC_ROOT=BASE_DIR \/ \"hines\" \/ \"static_collected\" STATIC_URL=\"\/static\/\" STATICFILES_DIRS=[BASE_DIR \/ \"hines\" \/ \"static\"] MEDIA_ROOT=BASE_DIR \/ \"hines\" \/ \"media\" MEDIA_URL=\"\/media\/\" if env.bool(\"USE_AWS_FOR_MEDIA\", False): DEFAULT_FILE_STORAGE=\"hines.core.storages.CustomS3Boto3Storage\" AWS_ACCESS_KEY_ID=env(\"AWS_ACCESS_KEY_ID\") AWS_SECRET_ACCESS_KEY=env(\"AWS_SECRET_ACCESS_KEY\") AWS_STORAGE_BUCKET_NAME=env(\"AWS_STORAGE_BUCKET_NAME\") AWS_QUERYSTRING_AUTH=False AWS_DEFAULT_ACL=\"public-read\" MEDIA_URL=f\"https:\/\/{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com{MEDIA_URL}\" SITE_ID=1 AUTH_USER_MODEL=\"users.User\" FIRST_DAY_OF_WEEK=1 MESSAGE_TAGS={ messages.DEBUG: \"utils-debug\", messages.INFO: \"utils-info\", messages.SUCCESS: \"utils-success\", messages.WARNING: \"utils-warning\", messages.ERROR: \"utils-error\", } SECURE_REFERRER_POLICY=\"no-referrer-when-downgrade\" DEFAULT_AUTO_FIELD=\"django.db.models.BigAutoField\" HINES_USE_HTTPS=env.bool(\"HINES_USE_HTTPS\", default=False) if HINES_USE_HTTPS: SECURE_SSL_REDIRECT=True SESSION_COOKIE_SECURE=True CSRF_COOKIE_SECURE=True SECURE_PROXY_SSL_HEADER=(\"HTTP_X_FORWARDED_PROTO\", \"https\") LOGGING={ \"version\": 1, \"disable_existing_loggers\": False, \"filters\":{ \"require_debug_false\":{ \"()\": \"django.utils.log.RequireDebugFalse\", }, \"require_debug_true\":{ \"()\": \"django.utils.log.RequireDebugTrue\", }, }, \"formatters\":{ \"rich\":{\"datefmt\": \"[%X]\"}, }, \"handlers\":{ \"console\":{ \"class\": \"rich.logging.RichHandler\", \"filters\":[\"require_debug_true\"], \"formatter\": \"rich\", \"level\": \"DEBUG\", \"rich_tracebacks\": True, \"tracebacks_show_locals\": True, }, }, \"loggers\":{ \"django\":{ \"handlers\":[], \"level\": \"INFO\", }, }, \"root\":{ \"handlers\":[\"console\"], \"level\": \"INFO\", }, } HINES_CACHE=env(\"HINES_CACHE\", default=\"memory\") if HINES_CACHE==\"redis\": REDIS_URL=env(\"REDIS_TLS_URL\", default=env(\"REDIS_URL\", default=\"\")) if REDIS_URL !=\"\": CACHES={ \"default\":{ \"BACKEND\": \"django_redis.cache.RedisCache\", \"LOCATION\": REDIS_URL, \"OPTIONS\":{\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"}, } } if env(\"REDIS_TLS_URL\", default=\"\"): CACHES[\"default\"][\"OPTIONS\"][\"CONNECTION_POOL_KWARGS\"]={ \"ssl_cert_reqs\": None } elif HINES_CACHE==\"dummy\": CACHES={ \"default\":{ \"BACKEND\": \"django.core.cache.backends.dummy.DummyCache\", } } if DEBUG: MIDDLEWARE +=[ \"debug_toolbar.middleware.DebugToolbarMiddleware\", ] INSTALLED_APPS +=[\"debug_toolbar\", \"django_extensions\"] def show_toolbar(request): return True DEBUG_TOOLBAR_CONFIG={ \"INTERCEPT_REDIRECTS\": False, \"SHOW_TOOLBAR_CALLBACK\": show_toolbar, } EMAIL_BACKEND=\"django.core.mail.backends.console.EmailBackend\" COMMENTS_APP=\"hines.custom_comments\" TAGGIT_CASE_INSENSITIVE=True WHITENOISE_ROOT=BASE_DIR \/ \"hines\" \/ \"static_html\" WHITENOISE_INDEX_FILE=True WHITENOISE_MIMETYPES={\".xsl\": \"text\/xsl\"} HINES_MAPBOX_API_KEY=env(\"HINES_MAPBOX_API_KEY\", default=\"\") if HINES_MAPBOX_API_KEY: SPECTATOR_MAPS={ \"enable\": True, \"library\": \"mapbox\", \"tile_style\": \"mapbox:\/\/styles\/mapbox\/light-v10\", \"api_key\": HINES_MAPBOX_API_KEY, } else: SPECTATOR_MAPS={\"enable\": False} AWS_DEFAULT_ACL=None IMAGEKIT_DEFAULT_CACHEFILE_STRATEGY=\"imagekit.cachefiles.strategies.Optimistic\" CORS_ALLOWED_ORIGINS=[ \"http:\/\/www.gyford.local:8000\", \"https:\/\/www.gyford.com\", \"https:\/\/cloudflareinsights.com\", \"https:\/\/static.cloudflareinsights.com\", ] SENTRY_DSN=env.bool(\"SENTRY_DSN\", default=\"\") if SENTRY_DSN: sentry_sdk.init( dsn=SENTRY_DSN, integrations=[DjangoIntegration()], ) WEBMENTIONS_USE_CELERY=False WEBMENTIONS_AUTO_APPROVE=False DOMAIN_NAME=env(\"WM_DOMAIN_NAME\", default=\"\") HINES_ROOT_DIR=env(\"HINES_ROOT_DIR\", default=\"phil\") HINES_AUTHOR_NAME=\"Phil Gyford\" HINES_AUTHOR_EMAIL=\"phil@gyford.com\" HINES_SITE_ICON=\"hines\/img\/site_icon.jpg\" HINES_FIRST_DATE=\"1989-06-02\" HINES_COMMENTS_ALLOWED=True HINES_COMMENTS_ALLOWED_TAGS=[ \"a\", \"blockquote\", \"code\", \"strong\", \"em\", \"ul\", \"ol\", \"li\", \"pre\", ] HINES_COMMENTS_ALLOWED_ATTRIBUTES={ \"a\":[\"href\", \"title\"], } HINES_COMMENTS_CLOSE_AFTER_DAYS=30 HINES_COMMENTS_ADMIN_FEED_SLUG=env( \"HINES_COMMENTS_ADMIN_FEED_SLUG\", default=\"admin-comments\" ) HINES_WEBMENTIONS_ADMIN_FEED_SLUG=env( \"HINES_WEBMENTIONS_ADMIN_FEED_SLUG\", default=\"admin-webmentions\" ) HINES_AKISMET_API_KEY=env(\"HINES_AKISMET_API_KEY\", default=\"\") HINES_HOME_PAGE_DISPLAY={ \"flickr_photos\": 4, \"pinboard_bookmarks\": 3, \"weblog_posts\":{\"writing\": 3, \"comments\": 1}, } HINES_EVERYTHING_FEED_KINDS=( (\"blog_posts\", \"writing\"), (\"blog_posts\", \"comments\"), (\"flickr_photos\", \"35034346050@N01\"), (\"pinboard_bookmarks\", \"philgyford\"), ) HINES_TEMPLATE_SETS=( {\"name\": \"2000\", \"start\": \"2000-03-01\", \"end\": \"2000-12-31\"}, {\"name\": \"2001\", \"start\": \"2001-01-01\", \"end\": \"2002-11-09\"}, {\"name\": \"2002\", \"start\": \"2002-11-10\", \"end\": \"2006-03-15\"}, {\"name\": \"200603\", \"start\": \"2006-03-16\", \"end\": \"2006-08-29\"}, {\"name\": \"200608\", \"start\": \"2006-08-30\", \"end\": \"2009-02-09\"}, {\"name\": \"2009\", \"start\": \"2009-02-10\", \"end\": \"2018-01-04\"}, ) HINES_CLOUDFLARE_ANALYTICS_TOKEN=env(\"HINES_CLOUDFLARE_ANALYTICS_TOKEN\", default=\"\") HINES_DATE_FORMAT=\"%Y-%m-%d\" HINES_DATETIME_FORMAT=\"[date][time]\" DITTO_CORE_DATE_FORMAT=HINES_DATE_FORMAT DITTO_CORE_DATETIME_FORMAT=HINES_DATETIME_FORMAT SPECTATOR_DATE_FORMAT=HINES_DATE_FORMAT HCAPTCHA_SITEKEY=env(\"HCAPTCHA_SITEKEY\", default=\"\") HCAPTCHA_SECRET=env(\"HCAPTCHA_SECRET\", default=\"\") HINES_USE_HCAPTCHA=True ","sourceWithComments":"\"\"\"\nShould be extended by settings for specific environments.\n\"\"\"\nfrom pathlib import Path\n\nimport environ\nimport sentry_sdk\nfrom django.contrib import messages\nfrom sentry_sdk.integrations.django import DjangoIntegration\n\n# Build paths inside the project like this: os.path.join(BASE_DIR, ...)\n# Build paths inside the project like this: BASE_DIR \/ 'subdir'.\nBASE_DIR = Path(__file__).resolve().parent.parent.parent\n\n\nenv = environ.Env()\nenviron.Env.read_env(BASE_DIR \/ \".env\")\n\n\nSECRET_KEY = env(\"DJANGO_SECRET_KEY\")\n\nDEBUG = env.bool(\"DEBUG\", default=False)\n\nALLOWED_HOSTS = env.list(\"ALLOWED_HOSTS\")\n\n\nADMINS = [(\"Phil Gyford\", \"phil@gyford.com\")]\n\nMANAGERS = ADMINS\n\n# Application definition\n\nINSTALLED_APPS = [\n    # The dal apps must be before django.contrib.admin:\n    \"dal\",\n    \"dal_select2\",\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"whitenoise.runserver_nostatic\",\n    \"django.contrib.staticfiles\",\n    \"django.contrib.sites\",\n    \"django.contrib.flatpages\",\n    \"django.contrib.redirects\",\n    \"django.contrib.sitemaps\",\n    \"taggit\",\n    \"django_comments\",\n    \"hcaptcha\",\n    \"imagekit\",\n    \"spectator.core\",\n    \"spectator.events\",\n    \"spectator.reading\",\n    \"sortedm2m\",\n    \"corsheaders\",\n    \"mentions\",\n    \"ditto.core\",\n    \"ditto.flickr\",\n    \"ditto.lastfm\",\n    \"ditto.pinboard\",\n    \"ditto.twitter\",\n    \"hines.users\",\n    \"hines.core\",\n    \"hines.blocks\",\n    \"hines.custom_comments\",\n    \"hines.stats\",\n    \"hines.links\",\n    \"hines.patterns\",\n    \"hines.weblogs\",\n]\n\nMIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    # Should go before WhiteNoiseMiddleware and CommonMiddleware:\n    \"corsheaders.middleware.CorsMiddleware\",\n    \"whitenoise.middleware.WhiteNoiseMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n    \"mentions.middleware.WebmentionHeadMiddleware\",\n    # Can go at the end of the list:\n    \"django.contrib.redirects.middleware.RedirectFallbackMiddleware\",\n]\n\nROOT_URLCONF = \"hines.config.urls\"\n\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [\"hines\/templates\"],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",\n                \"django.contrib.messages.context_processors.messages\",\n                \"hines.core.context_processors.core\",\n            ],\n        },\n    },\n]\n\nWSGI_APPLICATION = \"hines.config.wsgi.application\"\n\n\n# Uses DATABASE_URL environment variable:\nDATABASES = {\"default\": env.db_url()}\nDATABASES[\"default\"][\"CONN_MAX_AGE\"] = 500\n\n\n# Custom setting to enable the site-wide caching.\n# (We must also have set up the CACHES setting, if making this True.)\nUSE_PER_SITE_CACHE = False\n\nif USE_PER_SITE_CACHE:\n    # Must be first:\n    MIDDLEWARE = [\"django.middleware.cache.UpdateCacheMiddleware\"] + MIDDLEWARE\n    # Must be last:\n    MIDDLEWARE += [\n        \"django.middleware.cache.FetchFromCacheMiddleware\",\n    ]\n    CACHE_MIDDLEWARE_ALIAS = \"default\"\n    CACHE_MIDDLEWARE_SECONDS = 600\n    CACHE_MIDDLEWARE_KEY_PREFIX = \"\"\n\n\n# Password validation\n# https:\/\/docs.djangoproject.com\/en\/1.10\/ref\/settings\/#auth-password-validators\n\nAUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",  # noqa: E501\n    },\n    {\"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\"},\n    {\"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\"},\n    {\"NAME\": \"django.contrib.auth.password_validation.NumericPasswordValidator\"},\n]\n\n\n# Internationalization\n# https:\/\/docs.djangoproject.com\/en\/1.10\/topics\/i18n\/\n\n# Using 'en-gb' caused the select2 included with autocomplete_light, that's\n# used on admin screens for editing a weblog Post, to complain with:\n#   ValueError: Missing staticfiles manifest entry for\n#   'autocomplete_light\/vendor\/select2\/dist\/js\/i18n\/en-GB.js'\n# (2018-01-05)\nLANGUAGE_CODE = \"en\"\n\nTIME_ZONE = \"UTC\"\n\nUSE_I18N = False\n\nUSE_L10N = True\n\nUSE_TZ = True\n\nUSE_THOUSAND_SEPARATOR = True\n\n\nSTATICFILES_STORAGE = \"whitenoise.storage.CompressedManifestStaticFilesStorage\"\n\nSTATIC_ROOT = BASE_DIR \/ \"hines\" \/ \"static_collected\"\n\nSTATIC_URL = \"\/static\/\"\n\nSTATICFILES_DIRS = [BASE_DIR \/ \"hines\" \/ \"static\"]\n\n\nMEDIA_ROOT = BASE_DIR \/ \"hines\" \/ \"media\"\n\nMEDIA_URL = \"\/media\/\"\n\n\nif env.bool(\"USE_AWS_FOR_MEDIA\", False):\n    # Storing Media files on AWS.\n    DEFAULT_FILE_STORAGE = \"hines.core.storages.CustomS3Boto3Storage\"\n\n    AWS_ACCESS_KEY_ID = env(\"AWS_ACCESS_KEY_ID\")\n    AWS_SECRET_ACCESS_KEY = env(\"AWS_SECRET_ACCESS_KEY\")\n    AWS_STORAGE_BUCKET_NAME = env(\"AWS_STORAGE_BUCKET_NAME\")\n\n    AWS_QUERYSTRING_AUTH = False\n\n    AWS_DEFAULT_ACL = \"public-read\"\n\n    MEDIA_URL = f\"https:\/\/{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com{MEDIA_URL}\"\n\n\nSITE_ID = 1\n\nAUTH_USER_MODEL = \"users.User\"\n\n# Monday:\nFIRST_DAY_OF_WEEK = 1\n\n\n# Use our custom CSS classes for message styles.\nMESSAGE_TAGS = {\n    messages.DEBUG: \"utils-debug\",\n    messages.INFO: \"utils-info\",\n    messages.SUCCESS: \"utils-success\",\n    messages.WARNING: \"utils-warning\",\n    messages.ERROR: \"utils-error\",\n}\n\n\n# Rwquired for Cloudflare Web Analytics:\nSECURE_REFERRER_POLICY = \"no-referrer-when-downgrade\"\n\n\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\n\n\nHINES_USE_HTTPS = env.bool(\"HINES_USE_HTTPS\", default=False)\n\nif HINES_USE_HTTPS:\n    SECURE_SSL_REDIRECT = True\n    SESSION_COOKIE_SECURE = True\n    CSRF_COOKIE_SECURE = True\n    SECURE_PROXY_SSL_HEADER = (\"HTTP_X_FORWARDED_PROTO\", \"https\")\n\n\nLOGGING = {\n    \"version\": 1,\n    \"disable_existing_loggers\": False,\n    \"filters\": {\n        \"require_debug_false\": {\n            \"()\": \"django.utils.log.RequireDebugFalse\",\n        },\n        \"require_debug_true\": {\n            \"()\": \"django.utils.log.RequireDebugTrue\",\n        },\n    },\n    \"formatters\": {\n        \"rich\": {\"datefmt\": \"[%X]\"},\n    },\n    \"handlers\": {\n        \"console\": {\n            \"class\": \"rich.logging.RichHandler\",\n            \"filters\": [\"require_debug_true\"],\n            \"formatter\": \"rich\",\n            \"level\": \"DEBUG\",\n            \"rich_tracebacks\": True,\n            \"tracebacks_show_locals\": True,\n        },\n    },\n    \"loggers\": {\n        \"django\": {\n            \"handlers\": [],\n            \"level\": \"INFO\",\n        },\n    },\n    \"root\": {\n        \"handlers\": [\"console\"],\n        \"level\": \"INFO\",\n    },\n}\n\n\nHINES_CACHE = env(\"HINES_CACHE\", default=\"memory\")\n\nif HINES_CACHE == \"redis\":\n    # Use the TLS URL if set, otherwise, use the non-TLS one:\n    REDIS_URL = env(\"REDIS_TLS_URL\", default=env(\"REDIS_URL\", default=\"\"))\n    if REDIS_URL != \"\":\n        CACHES = {\n            \"default\": {\n                \"BACKEND\": \"django_redis.cache.RedisCache\",\n                \"LOCATION\": REDIS_URL,\n                \"OPTIONS\": {\"CLIENT_CLASS\": \"django_redis.client.DefaultClient\"},\n            }\n        }\n        if env(\"REDIS_TLS_URL\", default=\"\"):\n            CACHES[\"default\"][\"OPTIONS\"][\"CONNECTION_POOL_KWARGS\"] = {\n                \"ssl_cert_reqs\": None\n            }\n\nelif HINES_CACHE == \"dummy\":\n    CACHES = {\n        \"default\": {\n            \"BACKEND\": \"django.core.cache.backends.dummy.DummyCache\",\n        }\n    }\n\n\nif DEBUG:\n    # Changes for local development\n\n    MIDDLEWARE += [\n        \"debug_toolbar.middleware.DebugToolbarMiddleware\",\n    ]\n\n    INSTALLED_APPS += [\"debug_toolbar\", \"django_extensions\"]\n\n    def show_toolbar(request):\n        return True\n\n    DEBUG_TOOLBAR_CONFIG = {\n        \"INTERCEPT_REDIRECTS\": False,\n        \"SHOW_TOOLBAR_CALLBACK\": show_toolbar,\n    }\n\n    EMAIL_BACKEND = \"django.core.mail.backends.console.EmailBackend\"\n\n\n####################################################################\n# THIRD-PARTY APPS\n\n\nCOMMENTS_APP = \"hines.custom_comments\"\n\n# We don't want to allow duplicate tags like 'Fish' and 'fish':\nTAGGIT_CASE_INSENSITIVE = True\n\n\n# A directory of static files to be served in the root directory.\n# e.g. 'robots.txt'.\nWHITENOISE_ROOT = BASE_DIR \/ \"hines\" \/ \"static_html\"\n\n# Visiting \/example\/ will serve \/example\/index.html:\nWHITENOISE_INDEX_FILE = True\n\nWHITENOISE_MIMETYPES = {\".xsl\": \"text\/xsl\"}\n\nHINES_MAPBOX_API_KEY = env(\"HINES_MAPBOX_API_KEY\", default=\"\")\n\nif HINES_MAPBOX_API_KEY:\n    SPECTATOR_MAPS = {\n        \"enable\": True,\n        \"library\": \"mapbox\",\n        \"tile_style\": \"mapbox:\/\/styles\/mapbox\/light-v10\",\n        \"api_key\": HINES_MAPBOX_API_KEY,\n    }\nelse:\n    SPECTATOR_MAPS = {\"enable\": False}\n\n\nAWS_DEFAULT_ACL = None\n\n\n# https:\/\/django-imagekit.readthedocs.io\/en\/stable\/caching.html#removing-safeguards\nIMAGEKIT_DEFAULT_CACHEFILE_STRATEGY = \"imagekit.cachefiles.strategies.Optimistic\"\n\n\nCORS_ALLOWED_ORIGINS = [\n    \"http:\/\/www.gyford.local:8000\",\n    \"https:\/\/www.gyford.com\",\n    \"https:\/\/cloudflareinsights.com\",\n    \"https:\/\/static.cloudflareinsights.com\",\n]\n\n\n# Sentry\n# https:\/\/devcenter.heroku.com\/articles\/sentry#integrating-with-python-or-django\n\nSENTRY_DSN = env.bool(\"SENTRY_DSN\", default=\"\")\n\nif SENTRY_DSN:\n    sentry_sdk.init(\n        dsn=SENTRY_DSN,\n        integrations=[DjangoIntegration()],\n    )\n\n\n# django-wm\n\nWEBMENTIONS_USE_CELERY = False\n\nWEBMENTIONS_AUTO_APPROVE = False\n\nDOMAIN_NAME = env(\"WM_DOMAIN_NAME\", default=\"\")\n\n# END THIRD-PARTY APPS\n####################################################################\n\n\n####################################################################\n# DJANGO-HINES-SPECIFIC SETTINGS\n\n\n# Most hines-related pages will be within this root directory:\n# We only override this in settings by setting the environment variable.\nHINES_ROOT_DIR = env(\"HINES_ROOT_DIR\", default=\"phil\")\n\n# Used in templates and the Everything RSS Feed, for things that don't\n# have authors (so, not Blog Posts).\nHINES_AUTHOR_NAME = \"Phil Gyford\"\nHINES_AUTHOR_EMAIL = \"phil@gyford.com\"\n\n# Location within the static directory of an image.\n# Used for RSS feeds and Structured Data.\nHINES_SITE_ICON = \"hines\/img\/site_icon.jpg\"\n\n# We won't show Day Archive pages before this YYYY-MM-DD date:\nHINES_FIRST_DATE = \"1989-06-02\"\n\n# If True, must also be True for a Blog's and a Post's allow_comments field\n# before a comment on a Post is allowed.\nHINES_COMMENTS_ALLOWED = True\n\n# Both these are used by Bleach to whitelist the contents of comments.\nHINES_COMMENTS_ALLOWED_TAGS = [\n    \"a\",\n    \"blockquote\",\n    \"code\",\n    \"strong\",\n    \"em\",\n    \"ul\",\n    \"ol\",\n    \"li\",\n    \"pre\",\n]\nHINES_COMMENTS_ALLOWED_ATTRIBUTES = {\n    \"a\": [\"href\", \"title\"],\n}\n\n# Close comments on posts after this many days (assuming they're open):\n# Or None to ignore this setting\nHINES_COMMENTS_CLOSE_AFTER_DAYS = 30\n\nHINES_COMMENTS_ADMIN_FEED_SLUG = env(\n    \"HINES_COMMENTS_ADMIN_FEED_SLUG\", default=\"admin-comments\"\n)\n\nHINES_WEBMENTIONS_ADMIN_FEED_SLUG = env(\n    \"HINES_WEBMENTIONS_ADMIN_FEED_SLUG\", default=\"admin-webmentions\"\n)\n\n\nHINES_AKISMET_API_KEY = env(\"HINES_AKISMET_API_KEY\", default=\"\")\n\n# How many of each thing do we want displayed on the home page?\nHINES_HOME_PAGE_DISPLAY = {\n    \"flickr_photos\": 4,\n    \"pinboard_bookmarks\": 3,\n    \"weblog_posts\": {\"writing\": 3, \"comments\": 1},\n}\n\nHINES_EVERYTHING_FEED_KINDS = (\n    (\"blog_posts\", \"writing\"),\n    (\"blog_posts\", \"comments\"),\n    (\"flickr_photos\", \"35034346050@N01\"),\n    (\"pinboard_bookmarks\", \"philgyford\"),\n)\n\nHINES_TEMPLATE_SETS = (\n    # Colourful:\n    {\"name\": \"2000\", \"start\": \"2000-03-01\", \"end\": \"2000-12-31\"},\n    # Monochrome:\n    {\"name\": \"2001\", \"start\": \"2001-01-01\", \"end\": \"2002-11-09\"},\n    # Similar, but blue links:\n    {\"name\": \"2002\", \"start\": \"2002-11-10\", \"end\": \"2006-03-15\"},\n    # Basis for the next decade+:\n    {\"name\": \"200603\", \"start\": \"2006-03-16\", \"end\": \"2006-08-29\"},\n    # Sight & Sound theme plus a few tweaks:\n    {\"name\": \"200608\", \"start\": \"2006-08-30\", \"end\": \"2009-02-09\"},\n    # Same but a bit wider and (later) responsive:\n    {\"name\": \"2009\", \"start\": \"2009-02-10\", \"end\": \"2018-01-04\"},\n)\n\nHINES_CLOUDFLARE_ANALYTICS_TOKEN = env(\"HINES_CLOUDFLARE_ANALYTICS_TOKEN\", default=\"\")\n\n# Date\/time formats\n\nHINES_DATE_FORMAT = \"%Y-%m-%d\"\nHINES_DATETIME_FORMAT = \"[date] [time]\"\n\nDITTO_CORE_DATE_FORMAT = HINES_DATE_FORMAT\nDITTO_CORE_DATETIME_FORMAT = HINES_DATETIME_FORMAT\n\nSPECTATOR_DATE_FORMAT = HINES_DATE_FORMAT\n\n\n# For https:\/\/github.com\/AndrejZbin\/django-hcaptcha\n# Used in the comments form.\nHCAPTCHA_SITEKEY = env(\"HCAPTCHA_SITEKEY\", default=\"\")\nHCAPTCHA_SECRET = env(\"HCAPTCHA_SECRET\", default=\"\")\n\n# Set to False to disable the hCaptcha field on the comment form:\nHINES_USE_HCAPTCHA = True\n"}},"msg":"Try setting the log level to prevent Error L10 (output buffer overflow)"}},"https:\/\/github.com\/PrettyVirginia\/Flood-fill":{"58594177ffe9f0082df43680cc92c02defa739d3":{"url":"https:\/\/api.github.com\/repos\/PrettyVirginia\/Flood-fill\/commits\/58594177ffe9f0082df43680cc92c02defa739d3","html_url":"https:\/\/github.com\/PrettyVirginia\/Flood-fill\/commit\/58594177ffe9f0082df43680cc92c02defa739d3","message":"ring-buffer: Prevent overflow of size in ring_buffer_resize()","sha":"58594177ffe9f0082df43680cc92c02defa739d3","keyword":"buffer overflow prevent","diff":"diff --git a\/toppso3\/Utils.py b\/toppso3\/Utils.py\nindex f9b0fbd..df2a328 100644\n--- a\/toppso3\/Utils.py\n+++ b\/toppso3\/Utils.py\n@@ -304,4 +304,6 @@ def SE3Shortcut(robot, taumax, fmax, vmax, se3traj, Rlist, maxiter, expecteddura\n                     attempt += 1\n                     #print \"T:\", nnotretimable, \"; S:\", nnotshorter , \"; C:\", ncollision , \"; OK:\", attempt\n                     #print \"*******************************************\"\n-                else:\n\\ No newline at end of file\n+                else:\n+                    # print \"Not shorter\"\n+                    n\n\\ No newline at end of file\n","files":{"\/toppso3\/Utils.py":{"changes":[{"diff":"\n                     attempt += 1\n                     #print \"T:\", nnotretimable, \"; S:\", nnotshorter , \"; C:\", ncollision , \"; OK:\", attempt\n                     #print \"*******************************************\"\n-                else:\n\\ No newline at end of file\n+                else:\n+                    # print \"Not shorter\"\n+                    n\n\\ No newline at end of file\n","add":3,"remove":1,"filename":"\/toppso3\/Utils.py","badparts":["                else:"],"goodparts":["                else:","                    n"]}],"source":"\nfrom openravepy import * from pylab import * from numpy import * import lie import time import string import StringIO import TOPP from TOPP import TOPPpy from TOPP import TOPPbindings from TOPP import Trajectory from TOPP import Utilities import pdb import matplotlib.pyplot as plt def QuatDistance(quat0, quat1): rotationweight=1 innerProduct=dot(quat0,quat1) quatDistance=rotationweight*(1-abs(innerProduct)) return quatDistance def SO3Distance(R0, R1): return linalg.norm(lie.logvect(dot(R0.T,R1))) def R3Distance(b0, b1): return linalg.norm(b1-b0) def SE3Distance(X0, X1, c=None, d=None): R0=X0[:3,:3] R1=X1[:3,:3] b0=X0[:3,3] b1=X1[:3,3] if(c==None): c=1 else: c=c if(d==None): d=1 else: d=d return sqrt(c*(SO3Distance(R0,R1)**2) +d*(R3Distance(b0,b1)**2)) def TrajString3rdDegree(q_beg, q_end, qs_beg, qs_end, duration): trajectorystring='' ndof=len(q_beg) trajectorystring +=\"%f\\n%d\"%(duration, ndof) for k in range(ndof): a, b, c, d=Utilities.Interpolate3rdDegree(q_beg[k], q_end[k], qs_beg[k], qs_end[k], duration) trajectorystring +=\"\\n%f %f %f %f\"%(d, c, b, a) return trajectorystring def SE3TrajFromTransandSO3(transtraj, rtraj): if len(transtraj.chunkslist) !=len(rtraj.chunkslist): print 'error' return 0 clist=[] for c in transtraj.chunkslist: plist=[] for i in range(3): plist.append(c.polynomialsvector[i]) for i in range(3): rc=rtraj.chunkslist[len(clist)] plist.append(rc.polynomialsvector[i]) chunk=Trajectory.Chunk(c.duration, plist) clist.append(chunk) return Trajectory.PiecewisePolynomialTrajectory(clist) def TransRotTrajFromSE3Traj(SE3traj): transclist=[] rclist=[] for c in SE3traj.chunkslist: transchunk=Trajectory.Chunk(c.duration, c.polynomialsvector[:3]) transclist.append(transchunk) rchunk=Trajectory.Chunk(c.duration, c.polynomialsvector[3:]) rclist.append(rchunk) transtraj=Trajectory.PiecewisePolynomialTrajectory(transclist) rtraj=Trajectory.PiecewisePolynomialTrajectory(rclist) return transtraj, rtraj def ComputeSE3Constraints(SE3traj, taumax, fmax, discrtimestep, I=None, m=None): ndiscrsteps=int((SE3traj.duration +1e-10) \/ discrtimestep) +1 a=zeros((ndiscrsteps,12)) b=zeros((ndiscrsteps,12)) c=zeros((ndiscrsteps,12)) transtraj, rtraj=TransRotTrajFromSE3Traj(SE3traj) for i in range(ndiscrsteps): t=i * discrtimestep r=rtraj.Eval(t) rd=rtraj.Evald(t) rdd=rtraj.Evaldd(t) nr=linalg.norm(r) nr2=nr*nr nr3=nr2*nr nr4=nr3*nr nr5=nr4*nr R=lie.skewfromvect(r) snr=sin(nr) cnr=cos(nr) rcrd=cross(r,rd) rdrd=dot(r,rd) Amat= eye(3) -(1-cnr)\/nr2*R +(nr-snr)\/nr3*dot(R,R) C1=(nr-snr)\/nr3 * cross(rd,rcrd) C2=-(2*cnr+nr*snr-2)\/nr4 * rdrd*rcrd C3=(3*snr-nr*cnr -2*nr)\/nr5 * rdrd*cross(r,rcrd) C=C1+C2+C3 Ard=dot(Amat,rd) if I is None: at=Ard bt=dot(Amat,rdd) +C else: at=dot(I,Ard) bt=dot(I,dot(Amat,rdd)) +dot(I,C) +cross(Ard,dot(I,Ard)) a[i,3:6]=at a[i,9:12]=-at b[i,3:6]=bt b[i,9:12]=-bt c[i,3:6]=-taumax c[i,9:12]=-taumax td=transtraj.Evald(t) tdd=transtraj.Evaldd(t) if m is None: at=td bt=tdd a[i,:3]=at a[i,6:9]=-at b[i,:3]=bt b[i,6:9]=-bt c[i,:3]=-fmax c[i,6:9]=-fmax return a, b, c def CheckCollisionSE3Traj( robot, transtraj, rtraj, R_beg, checkcollisiontimestep=1e-3): \"\"\"CheckCollisionSE3Traj accepts a robot and trans, rot trajectory object as its inputs. (checkcollisiontimestep is set to 1e-3 as a default value) It returns True if any config along the traj is IN-COLLISION. \"\"\" env=robot.GetEnv() for s in np.arange(0, transtraj.duration, checkcollisiontimestep): with robot: transformation=eye(4) transformation[0:3,0:3]=lie.EvalRotation(R_beg, rtraj, s) transformation[0:3,3]=transtraj.Eval(s) robot.SetTransform(transformation) isincollision=(env.CheckCollision(robot, CollisionReport())) if(isincollision): return True with robot: robot.SetTransform(transformation) isincollision=(env.CheckCollision(robot, CollisionReport())) if(isincollision): return True else: return False def SE3Shortcut(robot, taumax, fmax, vmax, se3traj, Rlist, maxiter, expectedduration=-1, meanduration=0, upperlimit=-1, plotdura=None): if plotdura==1: plt.axis([0, maxiter, 0, se3traj.duration]) plt.ion() plt.show() ylabel('Trajectory duration(s)') xlabel('Iteration') t_sc_start=time.time() originalduration= se3traj.duration if upperlimit < 0: dur=se3traj.duration upperlimit=se3traj.duration else: dur=upperlimit attempt=0 integrationtimestep=1e-2 reparamtimestep=1e-2 passswitchpointnsteps=5 discrtimestep=1e-2 assert(dur > 10.0*discrtimestep) ncollision=0 nnotretimable=0 nnotshorter=0 transtraj, rtraj=TransRotTrajFromSE3Traj(se3traj) lietraj=lie.SplitTraj(Rlist, rtraj) for it in range(maxiter): if plotdura==1: plt.scatter(it, se3traj.duration) plt.draw() if(expectedduration > 0): if(se3traj.duration < expectedduration): print \"\\033[1;32mTrajectory's duration is already shorter than expected time --> stop shortcuting\\033[0m\" break if(dur < discrtimestep): print \"[Utils::Shortcut] trajectory duration is less than discrtimestep.\\n\" break t0=random.rand()* dur if meanduration==0: meanduration=dur -t0 T=random.rand()*min(meanduration,dur -t0) t1=t0 +T while(T < 2.0*discrtimestep): t0=random.rand()*dur if meanduration==0: meanduration=dur -t0 T=random.rand()*min(meanduration, dur -t0) t1=t0 +T if t1 > upperlimit: t1=upperlimit if(t1 < t0): temp=t0 t0=t1 t1=temp T=t1 -t0 R_beg=lietraj.EvalRotation(t0) R_end=lietraj.EvalRotation(t1) omega0=lietraj.EvalOmega(t0) omega1=lietraj.EvalOmega(t1) shortcutrtraj=lie.InterpolateSO3(R_beg,R_end,omega0,omega1, T) t_beg=transtraj.Eval(t0) t_end=transtraj.Eval(t1) v_beg=transtraj.Evald(t0) v_end=transtraj.Evald(t1) shortcuttranstraj=Trajectory.PiecewisePolynomialTrajectory.FromString(TrajString3rdDegree(t_beg,t_end,v_beg,v_end, T)) shortcutse3traj=SE3TrajFromTransandSO3(shortcuttranstraj, shortcutrtraj) isincollision=CheckCollisionSE3Traj(robot, shortcuttranstraj, shortcutrtraj, R_beg, discrtimestep) if(not isincollision): a,b,c=ComputeSE3Constraints(shortcutse3traj, taumax, fmax, discrtimestep) topp_inst=TOPP.QuadraticConstraints(shortcutse3traj, discrtimestep, vmax, list(a), list(b), list(c)) x=topp_inst.solver ret=x.RunComputeProfiles(1,1) if(ret==1): x.resduration if(x.resduration +0.1 < T): x.ReparameterizeTrajectory() x.WriteResultTrajectory() TOPPed_shortcutse3traj=Trajectory.PiecewisePolynomialTrajectory.FromString(x.restrajectorystring) TOPPed_shortcuttranstraj, TOPPed_shortcutrtraj=TransRotTrajFromSE3Traj(TOPPed_shortcutse3traj) newlietraj=ReplaceTrajectorySegment(lietraj, TOPPed_shortcutrtraj, t0, t1) newtranstraj=ReplaceTransTrajectorySegment(transtraj, TOPPed_shortcuttranstraj, t0,t1) newrtraj=Trajectory.PiecewisePolynomialTrajectory.FromString(TrajStringFromTrajList(newlietraj.trajlist)) newse3traj=SE3TrajFromTransandSO3(newtranstraj,newrtraj) Rlist=newlietraj.Rlist rtraj=newrtraj transtraj=newtranstraj lietraj=newlietraj se3traj=newse3traj dur=se3traj.duration print \"Success at iteration\",it +1,\":\", t0, t1,\"Deta_t:\", t1 -t0 -x.resduration attempt +=1 else: ","sourceWithComments":"from openravepy import *\nfrom pylab import *\n\nfrom numpy import *\n\nimport lie\nimport time \n\nimport string\nimport StringIO\n\nimport TOPP\nfrom TOPP import TOPPpy\nfrom TOPP import TOPPbindings\nfrom TOPP import Trajectory\nfrom TOPP import Utilities\n\nimport pdb ########################\nimport matplotlib.pyplot as plt\n\n\ndef QuatDistance(quat0, quat1): \n    rotationweight = 1\n    innerProduct = dot(quat0,quat1)\n    quatDistance = rotationweight*(1-abs(innerProduct))\n    return quatDistance\n\ndef SO3Distance(R0, R1): # bi-invariance\n    return linalg.norm(lie.logvect(dot(R0.T,R1)))\n\ndef R3Distance(b0, b1):\n    return linalg.norm(b1-b0)\n\ndef SE3Distance(X0, X1, c = None, d = None): # left invariance\n    R0 = X0[:3,:3]\n    R1 = X1[:3,:3]\n    b0 = X0[:3,3]\n    b1 = X1[:3,3]\n    if (c == None):\n        c = 1\n    else: c = c\n    if (d == None):\n        d = 1\n    else: d = d\n    return sqrt(c*(SO3Distance(R0,R1)**2) + d*(R3Distance(b0,b1)**2))\n    \n################## interpolate translation ####################################\ndef TrajString3rdDegree(q_beg, q_end, qs_beg, qs_end, duration):\n    trajectorystring = ''\n    ndof = len(q_beg)\n    \n    trajectorystring += \"%f\\n%d\"%(duration, ndof)\n\n    for k in range(ndof):\n        a, b, c, d = Utilities.Interpolate3rdDegree(q_beg[k], q_end[k], qs_beg[k], qs_end[k], duration)\n        trajectorystring += \"\\n%f %f %f %f\"%(d, c, b, a)\n    return trajectorystring\n\n#################### SE3 traj ##################################################\n\ndef SE3TrajFromTransandSO3(transtraj, rtraj): # same chunk.duration\n    #return duration-dimension-trans polynomial- rot polynomial\n    if len(transtraj.chunkslist) != len(rtraj.chunkslist):\n        print 'error'\n        return 0\n    clist = []\n    for c in transtraj.chunkslist:\n        plist = []\n        for i in range(3):\n            plist.append(c.polynomialsvector[i])\n        for i in range(3):\n            rc = rtraj.chunkslist[len(clist)]\n            plist.append(rc.polynomialsvector[i])\n        chunk = Trajectory.Chunk(c.duration, plist)\n        clist.append(chunk)\n    return Trajectory.PiecewisePolynomialTrajectory(clist)\n\n###################### Decompose SE3 traj to ROT and Trans traj ################\ndef TransRotTrajFromSE3Traj(SE3traj):\n    transclist = []\n    rclist = []\n    for c in SE3traj.chunkslist:\n        transchunk = Trajectory.Chunk(c.duration, c.polynomialsvector[:3])\n        transclist.append(transchunk)\n        rchunk = Trajectory.Chunk(c.duration, c.polynomialsvector[3:])\n        rclist.append(rchunk)\n    transtraj = Trajectory.PiecewisePolynomialTrajectory(transclist)\n    rtraj = Trajectory.PiecewisePolynomialTrajectory(rclist)\n    return transtraj, rtraj\n\n##########################SE3 constraint ########################################\ndef ComputeSE3Constraints(SE3traj, taumax, fmax, discrtimestep, I = None, m = None):\n    ndiscrsteps = int((SE3traj.duration + 1e-10) \/ discrtimestep) + 1\n    a = zeros((ndiscrsteps,12))\n    b = zeros((ndiscrsteps,12))\n    c = zeros((ndiscrsteps,12))\n    transtraj, rtraj = TransRotTrajFromSE3Traj(SE3traj)\n    for i in range(ndiscrsteps):\n        #rotconstraints\n        t = i * discrtimestep\n        r = rtraj.Eval(t)\n        rd = rtraj.Evald(t)\n        rdd = rtraj.Evaldd(t)\n        nr = linalg.norm(r)\n        nr2 = nr*nr\n        nr3 = nr2*nr\n        nr4 = nr3*nr\n        nr5 = nr4*nr\n        R = lie.skewfromvect(r)\n\n        snr = sin(nr)\n        cnr = cos(nr)\n        rcrd = cross(r,rd)\n        rdrd = dot(r,rd)\n\n        Amat =  eye(3) - (1-cnr)\/nr2*R + (nr-snr)\/nr3*dot(R,R)\n        C1 = (nr-snr)\/nr3 * cross(rd,rcrd)\n        C2 = -(2*cnr+nr*snr-2)\/nr4 * rdrd*rcrd\n        C3 = (3*snr-nr*cnr - 2*nr)\/nr5 * rdrd*cross(r,rcrd)\n        C = C1+C2+C3\n\n        Ard = dot(Amat,rd)\n        if I is None:            \n            at = Ard\n            bt = dot(Amat,rdd) + C\n        else:\n            at = dot(I,Ard)\n            bt = dot(I,dot(Amat,rdd)) + dot(I,C) + cross(Ard,dot(I,Ard))\n        \n        a[i,3:6] = at\n        a[i,9:12] = -at\n        b[i,3:6] = bt\n        b[i,9:12] = -bt\n        c[i,3:6] = -taumax\n        c[i,9:12] = -taumax\n\n        #transconstraints\n        td = transtraj.Evald(t)\n        tdd = transtraj.Evaldd(t)\n        if m is None:\n            at = td\n            bt = tdd\n\n        a[i,:3] = at\n        a[i,6:9] = -at\n        b[i,:3] = bt\n        b[i,6:9] = -bt\n        c[i,:3] = -fmax\n        c[i,6:9] = -fmax\n    return a, b, c\n\n######################## se3 traj collision checking ########################\n\ndef CheckCollisionSE3Traj( robot, transtraj, rtraj, R_beg,  checkcollisiontimestep = 1e-3):\n    \"\"\"CheckCollisionSE3Traj accepts a robot and trans, rot trajectory object as its inputs.\n       (checkcollisiontimestep is set to 1e-3 as a default value)\n       It returns True if any config along the traj is IN-COLLISION.\n    \"\"\"\n    env = robot.GetEnv()\n    for s in np.arange(0, transtraj.duration, checkcollisiontimestep):\n        with robot:\n            transformation = eye(4)\n            transformation[0:3,0:3] = lie.EvalRotation(R_beg, rtraj, s)\n            transformation[0:3,3] = transtraj.Eval(s)\n            robot.SetTransform(transformation)           \n            isincollision = (env.CheckCollision(robot, CollisionReport()))\n            #print  \"s =\", s, \" \", isincollision\n            if (isincollision):\n                return True\n    with robot:\n        robot.SetTransform(transformation)\n        isincollision = (env.CheckCollision(robot, CollisionReport()))\n        if (isincollision):\n            return True\n        else:\n            return False\n\n\n######################### SE3 shortcutting ##################################\ndef SE3Shortcut(robot, taumax, fmax, vmax, se3traj, Rlist, maxiter, expectedduration = -1,  meanduration = 0, upperlimit = -1, plotdura = None):\n    if plotdura == 1:\n        plt.axis([0, maxiter, 0, se3traj.duration])\n        plt.ion()\n        plt.show()\n        ylabel('Trajectory duration (s)')\n        xlabel('Iteration')\n\n    t_sc_start = time.time()\n    originalduration =  se3traj.duration\n    #return shortcuted traj\n    if upperlimit < 0:\n        dur = se3traj.duration\n        upperlimit = se3traj.duration\n    else:\n        dur = upperlimit\n    attempt = 0\n\n    ## for shortcutting\n    integrationtimestep = 1e-2             \n    reparamtimestep = 1e-2                  \n    passswitchpointnsteps = 5                \n    discrtimestep = 1e-2                    \n    assert(dur > 10.0*discrtimestep)\n    \n    ncollision = 0\n    nnotretimable = 0 \n    nnotshorter = 0\n    \n    transtraj, rtraj = TransRotTrajFromSE3Traj(se3traj)\n    lietraj = lie.SplitTraj(Rlist, rtraj)\n   \n\n    for it in range(maxiter):\n        if plotdura == 1:\n            plt.scatter(it, se3traj.duration)\n            plt.draw()\n        #transtraj, rtraj = TransRotTrajFromSE3Traj(se3traj)\n        #lietraj = lie.SplitTraj2(Rlist, rtraj)\n        if (expectedduration > 0): # check, if newlietraj.duration is short enough, stop SHORTCUTING\n            if (se3traj.duration < expectedduration):\n                print \"\\033[1;32mTrajectory's duration is already shorter than expected time --> stop shortcuting\\033[0m\"\n                break\n        if (dur < discrtimestep):\n            print \"[Utils::Shortcut] trajectory duration is less than discrtimestep.\\n\"\n            break ## otherwise, this will cause an error in TOPP        \n        \n        ## select an interval for shortcutting\n        t0 = random.rand()* dur\n        \n        if meanduration == 0:\n            meanduration = dur - t0\n            \n        T = random.rand()*min(meanduration,dur - t0)\n        t1 = t0 + T\n\n        while (T < 2.0*discrtimestep):\n            t0 = random.rand()*dur\n            if meanduration == 0:\n                meanduration = dur - t0\n                \n            T = random.rand()*min(meanduration, dur - t0)\n            t1 = t0 + T\n\n            if t1 > upperlimit:\n                t1 = upperlimit\n                if (t1 < t0):\n                    temp = t0\n                    t0 = t1\n                    t1 = temp\n                    T = t1 - t0\n\n        # print \"\\n\\nShortcutting iteration\", it + 1\n        # print t0, t1, t1- t0       \n        # interpolate from t0 to t1\n        R_beg = lietraj.EvalRotation(t0)\n        R_end = lietraj.EvalRotation(t1)\n        omega0 = lietraj.EvalOmega(t0)\n        omega1 = lietraj.EvalOmega(t1)\n        shortcutrtraj = lie.InterpolateSO3(R_beg,R_end,omega0,omega1, T)\n\n        t_beg = transtraj.Eval(t0)\n        t_end = transtraj.Eval(t1)\n        v_beg = transtraj.Evald(t0)\n        v_end = transtraj.Evald(t1)\n        \n        shortcuttranstraj = Trajectory.PiecewisePolynomialTrajectory.FromString(TrajString3rdDegree(t_beg,t_end,v_beg,v_end, T))\n        \n        shortcutse3traj = SE3TrajFromTransandSO3(shortcuttranstraj, shortcutrtraj)\n        #check feasibility only for the new portion\n        \n        isincollision = CheckCollisionSE3Traj(robot, shortcuttranstraj, shortcutrtraj, R_beg, discrtimestep)\n        if (not isincollision):\n            a,b,c = ComputeSE3Constraints(shortcutse3traj, taumax, fmax, discrtimestep)\n            topp_inst = TOPP.QuadraticConstraints(shortcutse3traj, discrtimestep, vmax, list(a), list(b), list(c))\n            x = topp_inst.solver\n            ret = x.RunComputeProfiles(1,1) \n            if (ret == 1):\n                x.resduration\n                ## check whether the new one has shorter duration\n                if (x.resduration + 0.1 < T): #skip if not shorter than 0.1 s\n                    \n                    x.ReparameterizeTrajectory()\n                    x.WriteResultTrajectory()\n                    TOPPed_shortcutse3traj = Trajectory.PiecewisePolynomialTrajectory.FromString(x.restrajectorystring)\n                    TOPPed_shortcuttranstraj, TOPPed_shortcutrtraj = TransRotTrajFromSE3Traj(TOPPed_shortcutse3traj)\n                    newlietraj = ReplaceTrajectorySegment(lietraj, TOPPed_shortcutrtraj , t0, t1)\n                   \n                    newtranstraj = ReplaceTransTrajectorySegment(transtraj, TOPPed_shortcuttranstraj, t0,t1)\n\n                    #####################################################\n                    newrtraj = Trajectory.PiecewisePolynomialTrajectory.FromString(TrajStringFromTrajList(newlietraj.trajlist))\n                    newse3traj = SE3TrajFromTransandSO3(newtranstraj,newrtraj)\n\n                    Rlist = newlietraj.Rlist\n                    rtraj = newrtraj\n                    transtraj = newtranstraj\n                    lietraj = newlietraj\n                    se3traj = newse3traj\n                    \n                    dur = se3traj.duration\n\n                    #print \"*******************************************\"\n                    print \"Success at iteration\",it + 1,\":\", t0, t1,\"Deta_t:\", t1 - t0 - x.resduration\n                    attempt += 1\n                    #print \"T:\", nnotretimable, \"; S:\", nnotshorter , \"; C:\", ncollision , \"; OK:\", attempt\n                    #print \"*******************************************\"\n                else:"}},"msg":"ring-buffer: Prevent overflow of size in ring_buffer_resize()"}}}